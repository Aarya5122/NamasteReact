//TODO: Class One - Inception

Homework:
    Emmet
    CDN - Content Delivery Network
    Cross Origin
    Async Defer in Script Tag
    React.CreateElement
    ReactDOM.CreateRoot
    Objects Created

Library:
    Easy to implement
    Similar to JQUERY

React and React DOM - (React Native, React Three)
    React - Core Version
    ReactDOM - Web Version (Virtual DOM)

React Facts:
    React will override the root element.
    Content inside root element is display if react is having issues to load (network/local/cache).

React Initial Goal:
    HTML inside Javascript
    CSS inside Javascript
    Async Data Request

Arrow Function:
    * "this" refers to lexical parent object of the Object calling it.


********************************************************************************************************
********************************************************************************************************
                            TODO: Chapter Two - Igniting Our App TODO: 
********************************************************************************************************
********************************************************************************************************


FIXME: NOTE: React.Children.toArray(map function)
FIXME: NOTE: transpiler - babel
FIXME: NOTE: -D === --save-dev
FIXME: npx parcel index.html 
            excute parcel using npm with index.html as entry point 
            development build
            Runs on local server port 1234
FIXME: npx parcel build index.html 
FIXME: npx parcel build index.html --https
FIXME: Anything that we can create using the production server we put that in .gitignore

Production Ready Tips:
    Bundle
    Minify
    Clean console.log - We have to config - Babel plugin transform remove console
    Optimise
    Caching
    Tree Shaking - Removing unwanted code like methods provided by packages which are not used.


Bundlers:
    Parcel - Easy Setup, / Config (0), Usability
    Webpack - By React (Babel - Transpiler)
    Vite - Fast
    Gulp

Package Managers: 
    NPM - powered by lot of things or helper packages. These helper packages are available in NPM
    Yarn

Testing Command: 
    Jest

package.json:
    ^ - Future Compatible
    ~ - Backward Compatible
    none - Fix

package-lock.json:
    Version - Exact versioning of package in production
    Important file, It locks the version, Never keep it in on gitignore (Works Fine Locally)
    Integrity - hashes the detials of package and checks for Integrity in production
    
node_modules
    Database - For NPM packages
    Audited Packages

Class Notes:
    Modules in browser script is not supported hence we pass type="module" in script.
    Hot Module Replacement (HMR) - Live Server
    File Watcher Algorithm - C++
    Production and Dev build
    Fast Builds
    Image Optimization
    Bundle, Differentail Bundling, Minify JS, Compress JS, Optimise code, Cleans Code
    Caching while development
    Compatible with older version of browser (Adds polyfills) - BrowserList package
    Functionality to enable HTTPS on dev machine
    PORT Numbers
    Consistent Hashing Algorithm
    Zero Configuration Bundlers
    TRANSITIVE DEPENDENCY - dependency ka dependency

Webpack - Lot of Configuration 

Home Work:
    Script types


********************************************************************************************************
********************************************************************************************************
                            TODO: Chapter Three - Laying the foundation TODO: 
********************************************************************************************************
********************************************************************************************************

BABEL - converts new functionality code to be supported in order version - polyfills

BABEL to remove console.log() => babel-plugin-tranform-remove-console
    create .babelrc file - Configuration file
    copy paste config from npm
    Babel converts the JSX expressions to React object.

JSX - Javascript XML - Javascript Syntax Extension - Javascript Executable.
    HTML like Syntax
    But not HTML inside JS
    JSX Expression

Components 
    Functional
    Class Based

Component Composition - Component inside Component
XSS Attack - Cross side scripting attack - when mallicious code is inserted through api call

JSX is secure It takes care of XSS Attack. Makes app safe from any kind of access by escaping it.
JS sanitized in {} in JSX

Key Reconciliation

